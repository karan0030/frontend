{"ast":null,"code":"var _jsxFileName = \"D:\\\\mernproj\\\\projfrontend\\\\src\\\\admin\\\\UpdateCategory.js\";\nimport React, { useState, useEffect } from 'react';\nimport Base from '../core/Base';\nimport { Link } from 'react-router-dom';\nimport { getCategories, getCategory, updateCategory } from './helper/adminapicall';\nimport { isAuthenticated } from '../auth/helper';\n\nconst UpdateCategory = ({\n  match\n}) => {\n  const {\n    user,\n    token\n  } = isAuthenticated();\n  const [values, setValues] = useState({\n    name: \"\",\n    error: \"\",\n    getRedirect: false,\n    formData: \"\",\n    loading: false,\n    createdCategory: \"\"\n  });\n  const {\n    name,\n    error,\n    getRedirect,\n    formData,\n    loading,\n    createdCategory\n  } = values;\n\n  const preload = categoryId => {\n    getCategory(categoryId).then(data => {\n      if (data.error) {\n        setValues({ ...values,\n          error: error.data\n        });\n      } else {\n        setValues({ ...values,\n          name: data.name,\n          formData: new FormData()\n        });\n        console.log(data.name);\n      }\n    }).catch(err => console.log(err));\n  };\n\n  useEffect(() => {\n    preload(match.params.productId);\n  }, []);\n\n  const handleChange = name => event => {\n    const value = event.target.value;\n    formData.set(name, value);\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    setValues({ ...values,\n      error: \"\",\n      loading: true\n    });\n    updateCategory(match.params.productId, user._id, token, formData).then(data => {\n      if (data.error) {\n        setValues({ ...values,\n          error: data.error\n        });\n      } else {\n        setValues({ ...values,\n          name: \"\",\n          loading: false,\n          createdCategory: data.name\n        });\n      }\n    });\n  };\n\n  const successMessage = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert alert-success mt-3\",\n    style: {\n      display: createdCategory ? \"\" : \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, createdCategory, \" Updated\"));\n\n  const warningMessage = () => {\n    if (error) {\n      return /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"text-warning\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 20\n        }\n      }, \"Update failed !!!! \");\n    }\n  };\n\n  const createProductForm = () => /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleChange(\"name\"),\n    name: \"name\",\n    className: \"form-control\",\n    placeholder: \"Name\",\n    required: true,\n    value: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: onSubmit,\n    className: \"btn btn-outline-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, \"Update Category\"));\n\n  return /*#__PURE__*/React.createElement(Base, {\n    title: \"Update Category\",\n    description: \"update category here\",\n    className: \"container bg-info p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/admin/dashboard\",\n    className: \"btn btn-md btn-dark mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 10\n    }\n  }, \" Admin Home\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row bg-dark text-white rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-8 offset-md-2 mb-3 mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 10\n    }\n  }, successMessage(), warningMessage(), createProductForm())));\n};\n\nexport default UpdateCategory;","map":{"version":3,"sources":["D:/mernproj/projfrontend/src/admin/UpdateCategory.js"],"names":["React","useState","useEffect","Base","Link","getCategories","getCategory","updateCategory","isAuthenticated","UpdateCategory","match","user","token","values","setValues","name","error","getRedirect","formData","loading","createdCategory","preload","categoryId","then","data","FormData","console","log","catch","err","params","productId","handleChange","event","value","target","set","onSubmit","preventDefault","_id","successMessage","display","warningMessage","createProductForm"],"mappings":"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","sourcesContent":["import React ,{useState,useEffect} from 'react';\r\nimport Base from '../core/Base';\r\nimport {Link } from 'react-router-dom'\r\nimport {getCategories, getCategory, updateCategory} from './helper/adminapicall'\r\nimport { isAuthenticated } from '../auth/helper';\r\n\r\n\r\n\r\nconst UpdateCategory=({match})=>{\r\n    \r\nconst {user,token}= isAuthenticated();\r\n    const [values,setValues] =useState({\r\n        name:\"\",\r\n        \r\n        error:\"\",\r\n        getRedirect:false,\r\n        formData:\"\",\r\n        \r\n        loading:false,\r\n        createdCategory:\"\"\r\n\r\n    });\r\n   \r\n    const { \r\n            name,error,getRedirect,formData,loading,createdCategory\r\n           }= values;\r\n\r\n    const preload =(categoryId)=>{\r\n        getCategory(categoryId).then(data=>{\r\n           \r\n            if(data.error){\r\n                setValues({...values,error:error.data})\r\n            }\r\n            else{\r\n               \r\n                setValues({\r\n                    ...values,\r\n                     name:data.name,\r\n                     formData:new FormData\r\n                     \r\n                })\r\n                \r\n                console.log(data.name);\r\n            }\r\n        }).catch(err=>console.log(err))\r\n    }  \r\n    \r\n   \r\n\r\n    useEffect(() => {\r\n        preload(match.params.productId)\r\n       \r\n    }, [])\r\n\r\n    const handleChange =name=>event=>{\r\n        const value= event.target.value\r\n        formData.set(name,value)\r\n        setValues({...values,[name]:value})\r\n    }\r\n\r\n    const onSubmit=(event)=>{\r\n        event.preventDefault();\r\n        setValues({...values,error:\"\",loading:true});\r\n        updateCategory(match.params.productId,user._id,token,formData).then(data=>{\r\n            if(data.error){\r\n                setValues({...values,error:data.error})\r\n            }\r\n            else{\r\n                setValues({...values,\r\n                    name:\"\",\r\n                    \r\n                    loading:false,\r\n                    createdCategory:data.name})\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    const successMessage=()=>(\r\n        <div className=\"alert alert-success mt-3\" style={{display : createdCategory?\"\":\"none\"}}>\r\n        <h4>{createdCategory} Updated</h4>\r\n        </div>\r\n           \r\n    \r\n       \r\n    )\r\n\r\n    const warningMessage=()=>{\r\n        if(error){\r\n            return <h4 className=\"text-warning\">Update failed !!!! </h4>\r\n        }\r\n       \r\n    }\r\n\r\n    const createProductForm = () => (\r\n        <form >\r\n          \r\n          <div className=\"form-group\">\r\n            <input\r\n              onChange={handleChange(\"name\")}\r\n              name=\"name\"\r\n              className=\"form-control\"\r\n              placeholder=\"Name\"required\r\n              value={name}\r\n            />\r\n          </div>\r\n          \r\n          \r\n          \r\n          \r\n          \r\n          \r\n          <button type=\"submit\" onClick={onSubmit} className=\"btn btn-outline-success\">\r\n            Update Category\r\n          </button>\r\n        </form>\r\n      );\r\n\r\n\r\n\r\n    return(\r\n        <Base title=\"Update Category\" description=\"update category here\" className=\"container bg-info p-4\">\r\n         <Link to=\"/admin/dashboard\" className=\"btn btn-md btn-dark mb-4\"> Admin Home</Link>\r\n         <div className=\"row bg-dark text-white rounded\">\r\n         <div className=\"col-md-8 offset-md-2 mb-3 mt-3\">\r\n         {successMessage()}\r\n         {warningMessage()}\r\n          {createProductForm ()}\r\n         </div>\r\n         </div>\r\n        </Base>\r\n    )\r\n}\r\n\r\nexport default UpdateCategory;"]},"metadata":{},"sourceType":"module"}