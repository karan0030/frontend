{"ast":null,"code":"var _jsxFileName = \"D:\\\\mernproj\\\\projfrontend\\\\src\\\\core\\\\Paymentb.js\";\nimport React, { useState, useEffect } from 'react';\nimport { isAuthenticated } from '../auth/helper';\nimport { getmeToken, processPayment } from './helper/PaymentHelper';\nimport { Link } from 'react-router-dom';\nimport { createOrder } from './helper/OrderHelper';\nimport DropIn from 'braintree-web-drop-in-react';\nimport { loadCart, emptyCart } from './helper/cardHelper';\n\nconst PaymentB = ({\n  product,\n  setReload = f => f,\n  reload = undefined\n}) => {\n  const [info, setInfo] = useState({\n    loading: false,\n    success: false,\n    clientToken: null,\n    error: \"\"\n  });\n\n  const userId = isAuthenticated() && isAuthenticated().user._id;\n\n  const token = isAuthenticated() && isAuthenticated().token;\n\n  const getToken = (userId, token) => {\n    getmeToken(userId, token).then(info => {\n      console.log(\"INFORMATION  \", info);\n\n      if (info.error) {\n        setInfo({ ...info,\n          error: info.error\n        });\n      } else {\n        const clientToken = info.clientToken;\n        setInfo({\n          clientToken\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    getToken(userId, token);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"jhdbcfdj\"));\n};\n\nexport default PaymentB;","map":{"version":3,"sources":["D:/mernproj/projfrontend/src/core/Paymentb.js"],"names":["React","useState","useEffect","isAuthenticated","getmeToken","processPayment","Link","createOrder","DropIn","loadCart","emptyCart","PaymentB","product","setReload","f","reload","undefined","info","setInfo","loading","success","clientToken","error","userId","user","_id","token","getToken","then","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,SAASC,UAAT,EAAqBC,cAArB,QAA2C,wBAA3C;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,WAAR,QAA0B,sBAA1B;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,qBAApC;;AAGA,MAAMC,QAAQ,GAAC,CAAC;AAACC,EAAAA,OAAD;AAASC,EAAAA,SAAS,GAACC,CAAC,IAAEA,CAAtB;AAAyBC,EAAAA,MAAM,GAACC;AAAhC,CAAD,KAA8C;AAEzD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC;AAC7BkB,IAAAA,OAAO,EAAC,KADqB;AAE7BC,IAAAA,OAAO,EAAC,KAFqB;AAG7BC,IAAAA,WAAW,EAAC,IAHiB;AAI7BC,IAAAA,KAAK,EAAC;AAJuB,GAAD,CAAhC;;AAOA,QAAMC,MAAM,GAAGpB,eAAe,MAAKA,eAAe,GAAGqB,IAAlB,CAAuBC,GAA1D;;AACA,QAAMC,KAAK,GAAGvB,eAAe,MAAKA,eAAe,GAAGuB,KAApD;;AAEA,QAAMC,QAAQ,GAAC,CAACJ,MAAD,EAAQG,KAAR,KAAgB;AAE3BtB,IAAAA,UAAU,CAACmB,MAAD,EAAQG,KAAR,CAAV,CAAyBE,IAAzB,CAA8BX,IAAI,IAAE;AAChCY,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4Bb,IAA5B;;AACA,UAAGA,IAAI,CAACK,KAAR,EAAc;AACVJ,QAAAA,OAAO,CAAC,EAAC,GAAGD,IAAJ;AAAUK,UAAAA,KAAK,EAACL,IAAI,CAACK;AAArB,SAAD,CAAP;AACH,OAFD,MAEK;AACD,cAAMD,WAAW,GAAGJ,IAAI,CAACI,WAAzB;AACAH,QAAAA,OAAO,CAAC;AAACG,UAAAA;AAAD,SAAD,CAAP;AACH;AACJ,KARD;AASH,GAXD;;AAaAnB,EAAAA,SAAS,CAAC,MAAM;AACZyB,IAAAA,QAAQ,CAACJ,MAAD,EAAQG,KAAR,CAAR;AACH,GAFQ,EAEN,EAFM,CAAT;AAKA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,CADJ;AAKH,CAnCD;;AAqCA,eAAef,QAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport { isAuthenticated } from '../auth/helper';\r\nimport { getmeToken, processPayment } from './helper/PaymentHelper';\r\nimport {Link} from 'react-router-dom'\r\nimport {createOrder} from './helper/OrderHelper'\r\nimport DropIn from 'braintree-web-drop-in-react';\r\nimport { loadCart, emptyCart } from './helper/cardHelper';\r\n\r\n\r\nconst PaymentB=({product,setReload=f=>f, reload=undefined})=>{\r\n\r\n    const [info, setInfo] = useState({\r\n        loading:false,\r\n        success:false,\r\n        clientToken:null,\r\n        error:\"\"\r\n    })\r\n       \r\n    const userId = isAuthenticated() &&isAuthenticated().user._id\r\n    const token = isAuthenticated() &&isAuthenticated().token\r\n\r\n    const getToken=(userId,token)=>{\r\n       \r\n        getmeToken(userId,token).then(info=>{\r\n            console.log(\"INFORMATION  \",info)\r\n            if(info.error){\r\n                setInfo({...info ,error:info.error})\r\n            }else{\r\n                const clientToken = info.clientToken\r\n                setInfo({clientToken})\r\n            }\r\n        })\r\n    }  \r\n    \r\n    useEffect(() => {\r\n        getToken(userId,token)\r\n    }, [])\r\n    \r\n    \r\n    return(\r\n        <div>\r\n        <h3>jhdbcfdj</h3></div>\r\n    )\r\n\r\n}\r\n\r\nexport default PaymentB;"]},"metadata":{},"sourceType":"module"}