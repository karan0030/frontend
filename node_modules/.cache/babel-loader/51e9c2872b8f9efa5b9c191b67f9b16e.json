{"ast":null,"code":"import _objectSpread from\"D:\\\\mernproj\\\\projfrontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"D:\\\\mernproj\\\\projfrontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{isAuthenticated}from'../auth/helper';import{getmeToken,processPayment}from'./helper/PaymentHelper';import{Link}from'react-router-dom';import{createOrder}from'./helper/OrderHelper';import DropIn from'braintree-web-drop-in-react';import{loadCart,emptyCart}from'./helper/cardHelper';var PaymentB=function PaymentB(_ref){var products=_ref.products,_ref$setReload=_ref.setReload,setReload=_ref$setReload===void 0?function(f){return f;}:_ref$setReload,_ref$reload=_ref.reload,reload=_ref$reload===void 0?undefined:_ref$reload;var _useState=useState({loading:false,success:false,clientToken:null,error:\"\",instance:{}}),_useState2=_slicedToArray(_useState,2),info=_useState2[0],setInfo=_useState2[1];var userId=isAuthenticated()&&isAuthenticated().user._id;var token=isAuthenticated()&&isAuthenticated().token;var getToken=function getToken(userId,token){getmeToken(userId,token).then(function(info){console.log(\"INFORMATION  \",info);if(info.error){setInfo(_objectSpread(_objectSpread({},info),{},{error:info.error}));}else{var clientToken=info.clientToken;setInfo({clientToken:clientToken});}});};useEffect(function(){getToken(userId,token);},[]);var onPurchase=function onPurchase(){setInfo({loading:true});var nonce;var getNonce=info.instance.requestPaymentMethod().then(function(data){nonce=data.nonce;var paymentData={paymentMethodNonce:nonce,amount:getAmount()};processPayment(userId,token,paymentData).then(function(response){setInfo(_objectSpread(_objectSpread({},info),{},{success:response.success,loading:false}));console.log(\"PAYMENT SUCCESS\");var orderData={products:products,transaction_id:response.transaction.id,amount:response.amount};createOrder(userId,token,orderData);emptyCart(function(){console.log(\"cart empty\");});setReload(!reload);}).catch(function(error){setInfo({loading:false,success:false});console.log(\"PAYMENT FAILED\");});});};var getAmount=function getAmount(){var amount=0;products.map(function(p){amount=amount+p.price;});return amount;};var showDropin=function showDropin(){return/*#__PURE__*/React.createElement(\"div\",null,info.clientToken!==null&&products.length>0?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(DropIn,{options:{authorization:info.clientToken},onInstance:function onInstance(instance){return info.instance=instance;}}),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-block btn-success\",onClick:onPurchase},\"Buy\")):/*#__PURE__*/React.createElement(\"h3\",{className:\"text-white\"},\"please login\"));};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h3\",null,\"Your bill amount is \",getAmount(),\" $\"),showDropin());};export default PaymentB;","map":{"version":3,"sources":["D:/mernproj/projfrontend/src/core/Paymentb.js"],"names":["React","useState","useEffect","isAuthenticated","getmeToken","processPayment","Link","createOrder","DropIn","loadCart","emptyCart","PaymentB","products","setReload","f","reload","undefined","loading","success","clientToken","error","instance","info","setInfo","userId","user","_id","token","getToken","then","console","log","onPurchase","nonce","getNonce","requestPaymentMethod","data","paymentData","paymentMethodNonce","amount","getAmount","response","orderData","transaction_id","transaction","id","catch","map","p","price","showDropin","length","authorization"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport { isAuthenticated } from '../auth/helper';\r\nimport { getmeToken, processPayment } from './helper/PaymentHelper';\r\nimport {Link} from 'react-router-dom'\r\nimport {createOrder} from './helper/OrderHelper'\r\nimport DropIn from 'braintree-web-drop-in-react';\r\nimport { loadCart, emptyCart } from './helper/cardHelper';\r\n\r\n\r\nconst PaymentB=({ products, setReload = f => f, reload = undefined })=>{\r\n\r\n    const [info, setInfo] = useState({\r\n        loading:false,\r\n        success:false,\r\n        clientToken:null,\r\n        error:\"\",\r\n        instance:{}\r\n    })\r\n       \r\n    const userId = isAuthenticated() &&isAuthenticated().user._id\r\n    const token = isAuthenticated() &&isAuthenticated().token\r\n\r\n    const getToken=(userId,token)=>{\r\n       \r\n        getmeToken(userId,token).then(info=>{\r\n            console.log(\"INFORMATION  \",info)\r\n            if(info.error){\r\n                setInfo({...info ,error:info.error})\r\n            }else{\r\n                const clientToken = info.clientToken\r\n                setInfo({clientToken})\r\n            }\r\n        })\r\n    }  \r\n    \r\n    useEffect(() => {\r\n        getToken(userId,token)\r\n    }, [])\r\n    \r\n    const onPurchase = () => {\r\n        setInfo({ loading: true });\r\n        let nonce;\r\n        let getNonce = info.instance.requestPaymentMethod().then(data => {\r\n          nonce = data.nonce;\r\n          const paymentData = {\r\n            paymentMethodNonce: nonce,\r\n            amount: getAmount()\r\n          };\r\n          processPayment(userId, token, paymentData)\r\n            .then(response => {\r\n              setInfo({ ...info, success: response.success, loading: false });\r\n              console.log(\"PAYMENT SUCCESS\");\r\n              const orderData ={\r\n                  products:products,\r\n                  transaction_id:response.transaction.id,\r\n                  amount:response.amount\r\n              }\r\n              createOrder(userId,token,orderData)\r\n\r\n              emptyCart(()=>{\r\n                  console.log(\"cart empty\")\r\n              })\r\n              \r\n              setReload(!reload)\r\n            })\r\n            .catch(error => {\r\n              setInfo({ loading: false, success: false });\r\n              console.log(\"PAYMENT FAILED\");\r\n            });\r\n        });\r\n      };\r\n    \r\n      const getAmount = () => {\r\n        let amount = 0;\r\n        products.map(p => {\r\n          amount = amount + p.price;\r\n        });\r\n        return amount;\r\n      };\r\n    \r\n\r\n    const showDropin=()=>{\r\n        return (\r\n            <div>\r\n            {info.clientToken!==null && products.length > 0?(\r\n                <div>\r\n                <DropIn\r\n                  options={{ authorization: info.clientToken }}\r\n                  onInstance={(instance) => (info.instance = instance)}\r\n                />\r\n                <button className=\"btn btn-block btn-success\" onClick={onPurchase}>Buy</button>\r\n              </div>\r\n\r\n            ):(<h3 className=\"text-white\">please login</h3>)}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    \r\n\r\n\r\n    return(\r\n        <div>\r\n        <h3>Your bill amount is {getAmount()} $</h3>\r\n        {showDropin()}\r\n        </div>\r\n        \r\n    )\r\n\r\n}\r\n\r\nexport default PaymentB;"]},"metadata":{},"sourceType":"module"}